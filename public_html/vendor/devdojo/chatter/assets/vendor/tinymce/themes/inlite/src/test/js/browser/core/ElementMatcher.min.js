asynctest("browser/core/ElementMatcherTest",["ephox.mcagar.api.TinyLoader","ephox.mcagar.api.TinyApis","ephox.agar.api.Step","ephox.agar.api.Assertions","tinymce/inlite/core/ElementMatcher","tinymce/inlite/core/PredicateId","ephox.agar.api.Pipeline"],function(i,a,f,j,k,e,b){var l=arguments[arguments.length-2];var c=arguments[arguments.length-1];var m=function(n){return function(o){return o===n}};var d=function(){return false};var h=function(p,q,o,n){return f.sync(function(){var s,r;q.setContent(o);s=q.dom.select(n)[0];r=k.element(s,[e.create("a",d),e.create("b",m(s))])(q);j.assertEq(r.id,"b","Should be matching B");j.assertEq(r.rect.w>0,true,"Should be have width")})};var g=function(p,q,o,n){return f.sync(function(){var t,s,r;q.setContent(o);t=q.dom.select(n)[0];s=q.dom.getParents(t);r=k.parent(s,[e.create("a",d),e.create("b",m(s[1])),e.create("c",m(s[0]))])(q);j.assertEq(r.id,"c","Should be matching C the closest one");j.assertEq(r.rect.w>0,true,"Should be have width")})};i.setup(function(p,q,o){var n=a(p);b.async({},[h(n,p,"<p>a</p>","p"),g(n,p,"<div><p><em>a</em></p></div>","em")],q,o)},{inline:true},l,c)});