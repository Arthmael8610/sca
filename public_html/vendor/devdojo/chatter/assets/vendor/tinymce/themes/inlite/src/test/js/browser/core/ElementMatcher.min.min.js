asynctest("browser/core/ElementMatcherTest",["ephox.mcagar.api.TinyLoader","ephox.mcagar.api.TinyApis","ephox.agar.api.Step","ephox.agar.api.Assertions","tinymce/inlite/core/ElementMatcher","tinymce/inlite/core/PredicateId","ephox.agar.api.Pipeline"],function(r,z,u,q,p,v,y){var o=arguments[arguments.length-2];var x=arguments[arguments.length-1];var n=function(a){return function(b){return b===a}};var w=function(){return false};var s=function(b,a,c,d){return u.sync(function(){var e,f;a.setContent(c);e=a.dom.select(d)[0];f=p.element(e,[v.create("a",w),v.create("b",n(e))])(a);q.assertEq(f.id,"b","Should be matching B");q.assertEq(f.rect.w>0,true,"Should be have width")})};var t=function(b,a,c,d){return u.sync(function(){var e,f,g;a.setContent(c);e=a.dom.select(d)[0];f=a.dom.getParents(e);g=p.parent(f,[v.create("a",w),v.create("b",n(f[1])),v.create("c",n(f[0]))])(a);q.assertEq(g.id,"c","Should be matching C the closest one");q.assertEq(g.rect.w>0,true,"Should be have width")})};r.setup(function(b,a,c){var d=z(b);y.async({},[s(d,b,"<p>a</p>","p"),t(d,b,"<div><p><em>a</em></p></div>","em")],a,c)},{inline:true},o,x)});